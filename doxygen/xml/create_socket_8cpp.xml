<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="create_socket_8cpp" kind="file" language="C++">
    <compoundname>createSocket.cpp</compoundname>
    <includes refid="create_socket_8h" local="yes">createSocket.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">sys/socket.h</includes>
    <includes local="no">sys/un.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="yes">log4cpp/Category.hh</includes>
    <includes local="no">event2/event.h</includes>
    <incdepgraph>
      <node id="141">
        <label>sys/stat.h</label>
      </node>
      <node id="143">
        <label>sys/un.h</label>
      </node>
      <node id="139">
        <label>event2/event.h</label>
      </node>
      <node id="138">
        <label>log4cpp/Category.hh</label>
      </node>
      <node id="145">
        <label>stdlib.h</label>
      </node>
      <node id="144">
        <label>fcntl.h</label>
      </node>
      <node id="140">
        <label>sys/types.h</label>
      </node>
      <node id="146">
        <label>unistd.h</label>
      </node>
      <node id="137">
        <label>createSocket.h</label>
        <link refid="create_socket_8h"/>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
      </node>
      <node id="142">
        <label>sys/socket.h</label>
      </node>
      <node id="136">
        <label>/home/mel/projects/Misc/Minecraft Server Service/src/createSocket.cpp</label>
        <link refid="createSocket.cpp"/>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="create_socket_8cpp_1a0300be853ca0519cc094d30a0c18be20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int createSocket</definition>
        <argsstring>(log4cpp::Category &amp;root)</argsstring>
        <name>createSocket</name>
        <param>
          <type>log4cpp::Category &amp;</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mel/projects/Misc/Minecraft Server Service/src/createSocket.cpp" line="33" column="1" bodyfile="/home/mel/projects/Misc/Minecraft Server Service/src/createSocket.cpp" bodystart="33" bodyend="58"/>
        <references refid="client_8cpp_1afa475efa26483438fd5d03a09ced884b" compoundref="client_8cpp" startline="36">controlSocket</references>
        <references refid="client_8cpp_1afed088663f8704004425cdae2120b9b3" compoundref="client_8cpp" startline="36">len</references>
        <referencedby refid="main_8cpp_1a840291bc02cba5474a4cb46a9b9566fe" compoundref="main_8cpp" startline="38" endline="108">main</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>createSocket.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2016<sp/>Mel<sp/>McCalla<sp/>&lt;melmccalla@gmail.com&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>MA<sp/>02110-1301,<sp/>USA.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="create_socket_8h" kindref="compound">createSocket.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/socket.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/un.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;log4cpp/Category.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;event2/event.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="create_socket_8h_1a0300be853ca0519cc094d30a0c18be20" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="create_socket_8cpp_1a0300be853ca0519cc094d30a0c18be20" kindref="member">createSocket</ref>(log4cpp::Category&amp;<sp/>root)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="client_8cpp_1afa475efa26483438fd5d03a09ced884b" kindref="member">controlSocket</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="client_8cpp_1afed088663f8704004425cdae2120b9b3" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_un<sp/>local;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((controlSocket<sp/>=<sp/>socket(AF_UNIX,<sp/>SOCK_STREAM,<sp/>0))<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root.fatal(</highlight><highlight class="stringliteral">&quot;Failure<sp/>creating<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>local.sun_family<sp/>=<sp/>AF_UNIX;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(local.sun_path,<sp/></highlight><highlight class="stringliteral">&quot;/etc/minecraft/control.socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>unlink(local.sun_path);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/>strlen(local.sun_path)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(local.sun_family);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bind(controlSocket,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)&amp;local,<sp/>len)<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root.fatal(</highlight><highlight class="stringliteral">&quot;Failure<sp/>binding<sp/>socket<sp/>to<sp/>path&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(listen(controlSocket,<sp/>5)<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root.fatal(</highlight><highlight class="stringliteral">&quot;Failure<sp/>listening<sp/>on<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>fcntl(controlSocket,<sp/>F_SETFL,<sp/>O_NONBLOCK);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="client_8cpp_1afa475efa26483438fd5d03a09ced884b" kindref="member">controlSocket</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/mel/projects/Misc/Minecraft Server Service/src/createSocket.cpp"/>
  </compounddef>
</doxygen>
