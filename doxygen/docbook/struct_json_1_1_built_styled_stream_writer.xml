<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="struct_json_1_1_built_styled_stream_writer">
<title>Json::BuiltStyledStreamWriter struct Reference</title>
<para>Inheritance diagram for Json::BuiltStyledStreamWriter</para>
<para>
    <figure>
        <title>Inheritance graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="struct_json_1_1_built_styled_stream_writer__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Collaboration diagram for Json::BuiltStyledStreamWriter</para>
<para>
    <figure>
        <title>Collaboration graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="struct_json_1_1_built_styled_stream_writer__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>typedef std::vector&lt; std::string &gt;  <link linkend="struct_json_1_1_built_styled_stream_writer_1a8356597862a354bcd55a7cb6e0512899">ChildValues</link></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Private Attributes</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>ChildValues childValues_</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>std::string indentString_</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>unsigned int rightMargin_</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>std::string indentation_</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>CommentStyle::Enum cs_</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>std::string colonSymbol_</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>std::string nullSymbol_</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>std::string endingLineFeedSymbol_</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool addChildValues_</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool indented_</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool useSpecialFloats_</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>unsigned int precision_</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="struct_json_1_1_built_styled_stream_writer_1ab0c2e665c86b22f8fafb0e52c8069954">BuiltStyledStreamWriter</link> (
std::string const &amp; indentation, <link linkend="struct_json_1_1_comment_style_1a51fc08f3518fd81eba12f340d19a3d0c">CommentStyle::Enum</link> cs, std::string const &amp; colonSymbol, std::string const &amp; nullSymbol, std::string const &amp; endingLineFeedSymbol, bool useSpecialFloats, unsigned int precision)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="struct_json_1_1_built_styled_stream_writer_1a2ecffc3d66c4feddf208e5cd3b1c0f18">write</link> (
Value const &amp; root, std::ostream * sout)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="struct_json_1_1_built_styled_stream_writer_1a7c9da861861e570a51b45f270c9ff150">writeValue</link> (
Value const &amp; value)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="struct_json_1_1_built_styled_stream_writer_1acd20e9274bbcf7876ef3af2e7d23a31f">writeArrayValue</link> (
Value const &amp; value)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="struct_json_1_1_built_styled_stream_writer_1af423fd33b3d580506ea3efc53b05a077">isMultineArray</link> (
Value const &amp; value)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="struct_json_1_1_built_styled_stream_writer_1a53de0fe57c883d621c7255e49248651e">pushValue</link> (
std::string const &amp; value)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="struct_json_1_1_built_styled_stream_writer_1a2b38a3714d415c4bd3b4812897130f3d">writeIndent</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="struct_json_1_1_built_styled_stream_writer_1a764c6d530b5bd660c4a7d1ad4eff6b8d">writeWithIndent</link> (
std::string const &amp; value)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="struct_json_1_1_built_styled_stream_writer_1a73e09692a2cfbd6e67836b060dc34a9f">indent</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="struct_json_1_1_built_styled_stream_writer_1a0da6c6f603e00c8c6e38af553edd8c55">unindent</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="struct_json_1_1_built_styled_stream_writer_1a32c4afca4e08fba79bb0a80a8010283a">writeCommentBeforeValue</link> (
Value const &amp; root)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="struct_json_1_1_built_styled_stream_writer_1a89625b134fce0255263ca40e6125742b">writeCommentAfterValueOnSameLine</link> (
Value const &amp; root)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static bool <link linkend="struct_json_1_1_built_styled_stream_writer_1a457c2f3c1e8c952caeb60e52477d0c9a">hasCommentForValue</link> (
const Value &amp; value)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
            <section xml:id="struct_json_1_1_built_styled_stream_writer_1a8356597862a354bcd55a7cb6e0512899">
                <title>typedef std::vector&lt;std::string&gt; Json::BuiltStyledStreamWriter::ChildValues</title> <emphasis></emphasis>
                
            </section>
        <section>
            <title>Member Data Documentation</title>
        </section>
            <section xml:id="struct_json_1_1_built_styled_stream_writer_1ab0c2e665c86b22f8fafb0e52c8069954">
                <title>Json::BuiltStyledStreamWriter::BuiltStyledStreamWriter (std::string const &amp;indentation, CommentStyle::Enum cs, std::string const &amp;colonSymbol, std::string const &amp;nullSymbol, std::string const &amp;endingLineFeedSymbol, bool useSpecialFloats, unsigned int precision)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="struct_json_1_1_built_styled_stream_writer_1a2ecffc3d66c4feddf208e5cd3b1c0f18">
                <title>int Json::BuiltStyledStreamWriter::write (Value const &amp;root, std::ostream *sout) override</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="struct_json_1_1_built_styled_stream_writer_1a7c9da861861e570a51b45f270c9ff150">
                <title>void Json::BuiltStyledStreamWriter::writeValue (Value const &amp;value)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="struct_json_1_1_built_styled_stream_writer_1acd20e9274bbcf7876ef3af2e7d23a31f">
                <title>void Json::BuiltStyledStreamWriter::writeArrayValue (Value const &amp;value)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="struct_json_1_1_built_styled_stream_writer_1af423fd33b3d580506ea3efc53b05a077">
                <title>bool Json::BuiltStyledStreamWriter::isMultineArray (Value const &amp;value)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="struct_json_1_1_built_styled_stream_writer_1a53de0fe57c883d621c7255e49248651e">
                <title>void Json::BuiltStyledStreamWriter::pushValue (std::string const &amp;value)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="struct_json_1_1_built_styled_stream_writer_1a2b38a3714d415c4bd3b4812897130f3d">
                <title>void Json::BuiltStyledStreamWriter::writeIndent ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="struct_json_1_1_built_styled_stream_writer_1a764c6d530b5bd660c4a7d1ad4eff6b8d">
                <title>void Json::BuiltStyledStreamWriter::writeWithIndent (std::string const &amp;value)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="struct_json_1_1_built_styled_stream_writer_1a73e09692a2cfbd6e67836b060dc34a9f">
                <title>void Json::BuiltStyledStreamWriter::indent ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="struct_json_1_1_built_styled_stream_writer_1a0da6c6f603e00c8c6e38af553edd8c55">
                <title>void Json::BuiltStyledStreamWriter::unindent ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="struct_json_1_1_built_styled_stream_writer_1a32c4afca4e08fba79bb0a80a8010283a">
                <title>void Json::BuiltStyledStreamWriter::writeCommentBeforeValue (Value const &amp;root)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="struct_json_1_1_built_styled_stream_writer_1a89625b134fce0255263ca40e6125742b">
                <title>void Json::BuiltStyledStreamWriter::writeCommentAfterValueOnSameLine (Value const &amp;root)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="struct_json_1_1_built_styled_stream_writer_1a457c2f3c1e8c952caeb60e52477d0c9a">
                <title>bool Json::BuiltStyledStreamWriter::hasCommentForValue (const Value &amp;value)</title> <emphasis></emphasis>
                
            </section>
</section>
