<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="class_json_1_1_our_reader">
<title>Json::OurReader class Reference</title>
<para>Inheritance diagram for Json::OurReader</para>
<para>
    <figure>
        <title>Inheritance graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="class_json_1_1_our_reader__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Collaboration diagram for Json::OurReader</para>
<para>
    <figure>
        <title>Collaboration graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="class_json_1_1_our_reader__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title> Classes </title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="class_json_1_1_our_reader_1_1_error_info">Json::OurReader::ErrorInfo</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="struct_json_1_1_our_reader_1_1_structured_error">Json::OurReader::StructuredError</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="class_json_1_1_our_reader_1_1_token">Json::OurReader::Token</link></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                            <para><literallayout>enum <link linkend="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcc">TokenType</link> {
<link linkend="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcca735d1f76eafc2c0c581ed79c077aaa7e">tokenEndOfStream</link>= 0,
<link linkend="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcca7495ef5c356d4faa39b702e528cc7e26">tokenObjectBegin</link>,
<link linkend="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcca8d7e94be97d76ea1c314130b5aabb014">tokenObjectEnd</link>,
<link linkend="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcca45d229fce2f5f4b52dc0d6c39c853436">tokenArrayBegin</link>,
<link linkend="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcca59a4f42b50d9731dce6be41818c3d91b">tokenArrayEnd</link>,
<link linkend="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dccadb37e59e1e52cd5e7417bc418b611ce1">tokenString</link>,
<link linkend="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcca766aefde855b1246d89b8552240c70d1">tokenNumber</link>,
<link linkend="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dccac7d2a552afcea291d47cf49dfefaf619">tokenTrue</link>,
<link linkend="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dccaab91e3ef98c1cb1326c3674e518c5126">tokenFalse</link>,
<link linkend="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcca4c80b7bb245e3863e38dc8e8586b3c51">tokenNull</link>,
<link linkend="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcca167898478691f1ac7a240981ccaa1713">tokenNaN</link>,
<link linkend="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcca800c7c7e896d569ebf6c2771eecc7060">tokenPosInf</link>,
<link linkend="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcca3cf3c4c72d6b5969f17f043a34b2ad4c">tokenNegInf</link>,
<link linkend="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcca8ca62ab9091b149d52ec55828f8040f4">tokenArraySeparator</link>,
<link linkend="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcca7c95881fb1162316bce42c629bf06214">tokenMemberSeparator</link>,
<link linkend="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcca777fb6589fdbe225bc10a1e49a090da9">tokenComment</link>,
<link linkend="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dccad39f929b971de8dc55fe84a2d2e3465e">tokenError</link>
}</literallayout>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>typedef std::deque&lt; <link linkend="class_json_1_1_our_reader_1_1_error_info">ErrorInfo</link> &gt;  <link linkend="class_json_1_1_our_reader_1a8cc69593ef7303e58e99bb5dbb767562">Errors</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>typedef std::stack&lt; Value * &gt;  <link linkend="class_json_1_1_our_reader_1a8480a5ef159cee3a090f96358414d8d3">Nodes</link></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>typedef char  <link linkend="class_json_1_1_our_reader_1a0cd0bab4caa66594ab843ccd5f9dc239">Char</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>typedef const <link linkend="class_json_1_1_our_reader_1a0cd0bab4caa66594ab843ccd5f9dc239">Char</link> *  <link linkend="class_json_1_1_our_reader_1a1bdc7bbc52ba87cae6b19746f2ee0189">Location</link></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Private Attributes</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>Nodes nodes_</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>Errors errors_</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>std::string document_</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>Location begin_</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>Location end_</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>Location current_</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>Location lastValueEnd_</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>Value * lastValue_</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>std::string commentsBefore_</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int stackDepth_</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>OurFeatures const features_</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool collectComments_</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="class_json_1_1_our_reader_1a48a850914b9c8d7781be172930c478e5">OurReader</link> (
<link linkend="class_json_1_1_our_features">OurFeatures</link> const &amp; features)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_json_1_1_our_reader_1aba4f8749aab7f02ec17f107e392caf80">parse</link> (
const char * beginDoc, const char * endDoc, Value &amp; root, bool collectComments)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>std::string <link linkend="class_json_1_1_our_reader_1ae9cbb7dbd9c6c96be37432e8dfa1afcb">getFormattedErrorMessages</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>std::vector&lt; <link linkend="struct_json_1_1_our_reader_1_1_structured_error">StructuredError</link> &gt; <link linkend="class_json_1_1_our_reader_1a02ef7871af3706754a233c36e6d489e9">getStructuredErrors</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_json_1_1_our_reader_1aef7aa4ca22ffaa38c401b16951d20e1e">pushError</link> (
const Value &amp; value, const std::string &amp; message)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_json_1_1_our_reader_1ad43315cbb0d6804e3b7177e84a1ec53d">pushError</link> (
const Value &amp; value, const std::string &amp; message, const Value &amp; extra)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_json_1_1_our_reader_1a048346238d703ad9aed06beb686e6102">good</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="class_json_1_1_our_reader_1aee013005522c0d34d2e14962851487ac">OurReader</link> (
<link linkend="class_json_1_1_our_reader">OurReader</link> const &amp; )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="class_json_1_1_our_reader_1ad418de7c47bd3d0510888e22110b796e">operator=</link> (
<link linkend="class_json_1_1_our_reader">OurReader</link> const &amp; )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_json_1_1_our_reader_1a0d1e66da47fe2e85f5033c59326dfdc3">readToken</link> (
<link linkend="class_json_1_1_our_reader_1_1_token">Token</link> &amp; token)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="class_json_1_1_our_reader_1a6fbc6d58a4505e5ccadf330b57b17ca5">skipSpaces</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_json_1_1_our_reader_1a4a03f1b266def9b47c4fef35386557fb">match</link> (
<link linkend="class_json_1_1_our_reader_1a1bdc7bbc52ba87cae6b19746f2ee0189">Location</link> pattern, int patternLength)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_json_1_1_our_reader_1a90f6bb9e55b2bc3d6c1880809495c222">readComment</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_json_1_1_our_reader_1aba784b125baa1b62387e767b791f2f89">readCStyleComment</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_json_1_1_our_reader_1ae3de80671f0f997053e1c1c8a47a45c5">readCppStyleComment</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_json_1_1_our_reader_1a5d39b12671499ec5975f3bbc84b7d438">readString</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_json_1_1_our_reader_1ac78592defdc333faf56c6d0908758da3">readStringSingleQuote</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_json_1_1_our_reader_1aefcb9a78cc45870ccac2db2a66c8ec50">readNumber</link> (
bool checkInf)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_json_1_1_our_reader_1a1765d9670d191c89a57a22ea5591d35f">readValue</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_json_1_1_our_reader_1aea198f8101dba55099f4d8121a993530">readObject</link> (
<link linkend="class_json_1_1_our_reader_1_1_token">Token</link> &amp; token)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_json_1_1_our_reader_1a0b9f58faf4212c6ecb5d8e2a1ac10257">readArray</link> (
<link linkend="class_json_1_1_our_reader_1_1_token">Token</link> &amp; token)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_json_1_1_our_reader_1a272d271290933a89abfd5096dd69c9e9">decodeNumber</link> (
<link linkend="class_json_1_1_our_reader_1_1_token">Token</link> &amp; token)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_json_1_1_our_reader_1a712270d53a2f023c2f406ac813548340">decodeNumber</link> (
<link linkend="class_json_1_1_our_reader_1_1_token">Token</link> &amp; token, Value &amp; decoded)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_json_1_1_our_reader_1a34e31d8b8399b7ad493359702b6de6c9">decodeString</link> (
<link linkend="class_json_1_1_our_reader_1_1_token">Token</link> &amp; token)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_json_1_1_our_reader_1a44b589a85f02f0e2de1b4ad6916be0c5">decodeString</link> (
<link linkend="class_json_1_1_our_reader_1_1_token">Token</link> &amp; token, std::string &amp; decoded)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_json_1_1_our_reader_1a1d1c3b44f6720a0e7c39b5ae8de3981c">decodeDouble</link> (
<link linkend="class_json_1_1_our_reader_1_1_token">Token</link> &amp; token)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_json_1_1_our_reader_1aa5c15a8cd32754f07430dedba3d1308e">decodeDouble</link> (
<link linkend="class_json_1_1_our_reader_1_1_token">Token</link> &amp; token, Value &amp; decoded)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_json_1_1_our_reader_1ac1bf03c161ece082e48da450c50f528d">decodeUnicodeCodePoint</link> (
<link linkend="class_json_1_1_our_reader_1_1_token">Token</link> &amp; token, <link linkend="class_json_1_1_our_reader_1a1bdc7bbc52ba87cae6b19746f2ee0189">Location</link> &amp; current, <link linkend="class_json_1_1_our_reader_1a1bdc7bbc52ba87cae6b19746f2ee0189">Location</link> end, unsigned int &amp; unicode)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_json_1_1_our_reader_1adb39be814cc6076b91a0919bdd5b24b0">decodeUnicodeEscapeSequence</link> (
<link linkend="class_json_1_1_our_reader_1_1_token">Token</link> &amp; token, <link linkend="class_json_1_1_our_reader_1a1bdc7bbc52ba87cae6b19746f2ee0189">Location</link> &amp; current, <link linkend="class_json_1_1_our_reader_1a1bdc7bbc52ba87cae6b19746f2ee0189">Location</link> end, unsigned int &amp; unicode)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_json_1_1_our_reader_1a5a48b71c1c16fa671814c8338e452bc0">addError</link> (
const std::string &amp; message, <link linkend="class_json_1_1_our_reader_1_1_token">Token</link> &amp; token, <link linkend="class_json_1_1_our_reader_1a1bdc7bbc52ba87cae6b19746f2ee0189">Location</link> extra)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_json_1_1_our_reader_1a035651f0700a76a815e5f904c63ebb1c">recoverFromError</link> (
<link linkend="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcc">TokenType</link> skipUntilToken)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="class_json_1_1_our_reader_1ae68a7047acd692be8077e259d524c6d9">addErrorAndRecover</link> (
const std::string &amp; message, <link linkend="class_json_1_1_our_reader_1_1_token">Token</link> &amp; token, <link linkend="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcc">TokenType</link> skipUntilToken)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="class_json_1_1_our_reader_1ad48bdaf5b686706f003e792fdbcbf102">skipUntilSpace</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>Value &amp; <link linkend="class_json_1_1_our_reader_1a2acd5b1d53e7d7e17c21ff8e96edc09d">currentValue</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="class_json_1_1_our_reader_1a0cd0bab4caa66594ab843ccd5f9dc239">Char</link> <link linkend="class_json_1_1_our_reader_1a298285d035fdbc554caae09d9f0a5859">getNextChar</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="class_json_1_1_our_reader_1a9f47ad324225df1e68bda7dc451845c9">getLocationLineAndColumn</link> (
<link linkend="class_json_1_1_our_reader_1a1bdc7bbc52ba87cae6b19746f2ee0189">Location</link> location, int &amp; line, int &amp; column)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>std::string <link linkend="class_json_1_1_our_reader_1a579a7d2e493f63c4b122103844e3cedd">getLocationLineAndColumn</link> (
<link linkend="class_json_1_1_our_reader_1a1bdc7bbc52ba87cae6b19746f2ee0189">Location</link> location)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="class_json_1_1_our_reader_1ad7318c37469a9106069a236fb4b10e1f">addComment</link> (
<link linkend="class_json_1_1_our_reader_1a1bdc7bbc52ba87cae6b19746f2ee0189">Location</link> begin, <link linkend="class_json_1_1_our_reader_1a1bdc7bbc52ba87cae6b19746f2ee0189">Location</link> end, CommentPlacement placement)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="class_json_1_1_our_reader_1a856dea44d92578c276856d7a65a4ebdc">skipCommentTokens</link> (
<link linkend="class_json_1_1_our_reader_1_1_token">Token</link> &amp; token)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
            <section xml:id="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcc">
               <title>enum TokenType </title>
               
               <formalpara>
                    <title>Enumerator:</title>
                    <variablelist>
                        <varlistentry xml:id="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcca735d1f76eafc2c0c581ed79c077aaa7e">
                            <term>tokenEndOfStream</term>
                            <listitem>
                                <para></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry xml:id="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcca7495ef5c356d4faa39b702e528cc7e26">
                            <term>tokenObjectBegin</term>
                            <listitem>
                                <para></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry xml:id="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcca8d7e94be97d76ea1c314130b5aabb014">
                            <term>tokenObjectEnd</term>
                            <listitem>
                                <para></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry xml:id="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcca45d229fce2f5f4b52dc0d6c39c853436">
                            <term>tokenArrayBegin</term>
                            <listitem>
                                <para></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry xml:id="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcca59a4f42b50d9731dce6be41818c3d91b">
                            <term>tokenArrayEnd</term>
                            <listitem>
                                <para></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry xml:id="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dccadb37e59e1e52cd5e7417bc418b611ce1">
                            <term>tokenString</term>
                            <listitem>
                                <para></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry xml:id="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcca766aefde855b1246d89b8552240c70d1">
                            <term>tokenNumber</term>
                            <listitem>
                                <para></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry xml:id="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dccac7d2a552afcea291d47cf49dfefaf619">
                            <term>tokenTrue</term>
                            <listitem>
                                <para></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry xml:id="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dccaab91e3ef98c1cb1326c3674e518c5126">
                            <term>tokenFalse</term>
                            <listitem>
                                <para></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry xml:id="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcca4c80b7bb245e3863e38dc8e8586b3c51">
                            <term>tokenNull</term>
                            <listitem>
                                <para></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry xml:id="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcca167898478691f1ac7a240981ccaa1713">
                            <term>tokenNaN</term>
                            <listitem>
                                <para></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry xml:id="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcca800c7c7e896d569ebf6c2771eecc7060">
                            <term>tokenPosInf</term>
                            <listitem>
                                <para></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry xml:id="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcca3cf3c4c72d6b5969f17f043a34b2ad4c">
                            <term>tokenNegInf</term>
                            <listitem>
                                <para></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry xml:id="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcca8ca62ab9091b149d52ec55828f8040f4">
                            <term>tokenArraySeparator</term>
                            <listitem>
                                <para></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry xml:id="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcca7c95881fb1162316bce42c629bf06214">
                            <term>tokenMemberSeparator</term>
                            <listitem>
                                <para></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry xml:id="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dcca777fb6589fdbe225bc10a1e49a090da9">
                            <term>tokenComment</term>
                            <listitem>
                                <para></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry xml:id="class_json_1_1_our_reader_1a15116f7276ddf1e7a2cc3cbefa884dccad39f929b971de8dc55fe84a2d2e3465e">
                            <term>tokenError</term>
                            <listitem>
                                <para></para>
                            </listitem>
                        </varlistentry>
                     </variablelist>
                </formalpara>
                <para>Definition at line 1131 of file jsoncpp.cpp
                    <computeroutput><literallayout>
{
tokenEndOfStream= 0, 
tokenObjectBegin, 
tokenObjectEnd, 
tokenArrayBegin, 
tokenArrayEnd, 
tokenString, 
tokenNumber, 
tokenTrue, 
tokenFalse, 
tokenNull, 
tokenNaN, 
tokenPosInf, 
tokenNegInf, 
tokenArraySeparator, 
tokenMemberSeparator, 
tokenComment, 
tokenError, 
}TokenType;
                    </literallayout></computeroutput>
                </para>
            </section>
            <section xml:id="class_json_1_1_our_reader_1a8cc69593ef7303e58e99bb5dbb767562">
                <title>typedef std::deque&lt;ErrorInfo&gt; Json::OurReader::Errors</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1a8480a5ef159cee3a090f96358414d8d3">
                <title>typedef std::stack&lt;Value*&gt; Json::OurReader::Nodes</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1a0cd0bab4caa66594ab843ccd5f9dc239">
                <title>typedef char Json::OurReader::Char</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1a1bdc7bbc52ba87cae6b19746f2ee0189">
                <title>typedef const Char* Json::OurReader::Location</title> <emphasis></emphasis>
                
            </section>
        <section>
            <title>Member Data Documentation</title>
        </section>
            <section xml:id="class_json_1_1_our_reader_1a48a850914b9c8d7781be172930c478e5">
                <title>Json::OurReader::OurReader (OurFeatures const &amp;features)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1aba4f8749aab7f02ec17f107e392caf80">
                <title>bool Json::OurReader::parse (const char *beginDoc, const char *endDoc, Value &amp;root, bool collectComments=true)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1ae9cbb7dbd9c6c96be37432e8dfa1afcb">
                <title>std::string Json::OurReader::getFormattedErrorMessages () const </title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1a02ef7871af3706754a233c36e6d489e9">
                <title>std::vector&lt; OurReader::StructuredError &gt; Json::OurReader::getStructuredErrors () const </title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1aef7aa4ca22ffaa38c401b16951d20e1e">
                <title>bool Json::OurReader::pushError (const Value &amp;value, const std::string &amp;message)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1ad43315cbb0d6804e3b7177e84a1ec53d">
                <title>bool Json::OurReader::pushError (const Value &amp;value, const std::string &amp;message, const Value &amp;extra)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1a048346238d703ad9aed06beb686e6102">
                <title>bool Json::OurReader::good () const </title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1aee013005522c0d34d2e14962851487ac">
                <title>Json::OurReader::OurReader (OurReader const &amp;)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1ad418de7c47bd3d0510888e22110b796e">
                <title>void Json::OurReader::operator= (OurReader const &amp;)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1a0d1e66da47fe2e85f5033c59326dfdc3">
                <title>bool Json::OurReader::readToken (Token &amp;token)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1a6fbc6d58a4505e5ccadf330b57b17ca5">
                <title>void Json::OurReader::skipSpaces ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1a4a03f1b266def9b47c4fef35386557fb">
                <title>bool Json::OurReader::match (Location pattern, int patternLength)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1a90f6bb9e55b2bc3d6c1880809495c222">
                <title>bool Json::OurReader::readComment ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1aba784b125baa1b62387e767b791f2f89">
                <title>bool Json::OurReader::readCStyleComment ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1ae3de80671f0f997053e1c1c8a47a45c5">
                <title>bool Json::OurReader::readCppStyleComment ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1a5d39b12671499ec5975f3bbc84b7d438">
                <title>bool Json::OurReader::readString ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1ac78592defdc333faf56c6d0908758da3">
                <title>bool Json::OurReader::readStringSingleQuote ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1aefcb9a78cc45870ccac2db2a66c8ec50">
                <title>bool Json::OurReader::readNumber (bool checkInf)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1a1765d9670d191c89a57a22ea5591d35f">
                <title>bool Json::OurReader::readValue ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1aea198f8101dba55099f4d8121a993530">
                <title>bool Json::OurReader::readObject (Token &amp;token)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1a0b9f58faf4212c6ecb5d8e2a1ac10257">
                <title>bool Json::OurReader::readArray (Token &amp;token)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1a272d271290933a89abfd5096dd69c9e9">
                <title>bool Json::OurReader::decodeNumber (Token &amp;token)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1a712270d53a2f023c2f406ac813548340">
                <title>bool Json::OurReader::decodeNumber (Token &amp;token, Value &amp;decoded)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1a34e31d8b8399b7ad493359702b6de6c9">
                <title>bool Json::OurReader::decodeString (Token &amp;token)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1a44b589a85f02f0e2de1b4ad6916be0c5">
                <title>bool Json::OurReader::decodeString (Token &amp;token, std::string &amp;decoded)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1a1d1c3b44f6720a0e7c39b5ae8de3981c">
                <title>bool Json::OurReader::decodeDouble (Token &amp;token)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1aa5c15a8cd32754f07430dedba3d1308e">
                <title>bool Json::OurReader::decodeDouble (Token &amp;token, Value &amp;decoded)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1ac1bf03c161ece082e48da450c50f528d">
                <title>bool Json::OurReader::decodeUnicodeCodePoint (Token &amp;token, Location &amp;current, Location end, unsigned int &amp;unicode)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1adb39be814cc6076b91a0919bdd5b24b0">
                <title>bool Json::OurReader::decodeUnicodeEscapeSequence (Token &amp;token, Location &amp;current, Location end, unsigned int &amp;unicode)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1a5a48b71c1c16fa671814c8338e452bc0">
                <title>bool Json::OurReader::addError (const std::string &amp;message, Token &amp;token, Location extra=0)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1a035651f0700a76a815e5f904c63ebb1c">
                <title>bool Json::OurReader::recoverFromError (TokenType skipUntilToken)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1ae68a7047acd692be8077e259d524c6d9">
                <title>bool Json::OurReader::addErrorAndRecover (const std::string &amp;message, Token &amp;token, TokenType skipUntilToken)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1ad48bdaf5b686706f003e792fdbcbf102">
                <title>void Json::OurReader::skipUntilSpace ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1a2acd5b1d53e7d7e17c21ff8e96edc09d">
                <title>Value &amp; Json::OurReader::currentValue ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1a298285d035fdbc554caae09d9f0a5859">
                <title>OurReader::Char Json::OurReader::getNextChar ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1a9f47ad324225df1e68bda7dc451845c9">
                <title>void Json::OurReader::getLocationLineAndColumn (Location location, int &amp;line, int &amp;column) const </title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1a579a7d2e493f63c4b122103844e3cedd">
                <title>std::string Json::OurReader::getLocationLineAndColumn (Location location) const </title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1ad7318c37469a9106069a236fb4b10e1f">
                <title>void Json::OurReader::addComment (Location begin, Location end, CommentPlacement placement)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_json_1_1_our_reader_1a856dea44d92578c276856d7a65a4ebdc">
                <title>void Json::OurReader::skipCommentTokens (Token &amp;token)</title> <emphasis></emphasis>
                
            </section>
</section>
